{"version":3,"sources":["serviceWorker.js","app/context.js","app/actions.js","app/types.js","components/ModalComponent/index.js","components/ModalComponent/ModalComponent.js","components/TableDragDrop/TableTask.js","components/TableDragDrop/TableTaskList.js","components/TableDragDrop/index.js","components/TableDragDrop/TableDragDrop.js","components/TaskForToday/index.js","components/TaskForToday/TaskForToday.js","components/AllTask/index.js","components/AllTask/AllTask.js","components/Chart/index.js","components/Chart/Chart.js","components/FormTask/index.js","components/FormTask/FormTask.js","components/Authorization/index.js","components/Authorization/Authorization.js","App.js","app/dataReducer.js","app/rootReducer.js","app/api.js","app/sagas.js","app/store.js","app/initMiddleware.js","index.js"],"names":["Boolean","window","location","hostname","match","Context","React","createContext","changeData","data","type","payload","setData","ModalComponent","value","dispatch","useDispatch","useSelector","store","appData","todayData","useState","visible","setVisible","valueTextarea","setValueTextarea","useEffect","task","title","placement","shape","icon","EditOutlined","onClick","onOk","e","forEach","element","id","onCancel","name","rows","cols","onChange","target","TableTask","SortableElement","style","checked","tableTaskControl","useContext","className","moment","format","key","CheckOutlined","twoToneColor","handleChacked","onConfirm","handleDelete","DeleteOutlined","everyday","FileSyncOutlined","handleEveryday","TableTaskList","SortableContainer","items","map","index","TableDragDrop","setItems","filter","item","el","newObj","everydayTask","console","log","length","newtodayData","Provider","to","onSortEnd","oldIndex","newIndex","arrayMove","newData","newTodayData","TaskForToday","AllTask","Chart","FormTask","state","setValue","onSubmit","preventDefault","random","Math","floor","date","valueOf","placeholder","htmlType","Authorization","activeForm","setActiveForm","login","setLogin","password","setPassword","autho","setAutho","authorization","JSON","parse","localStorage","getItem","setItem","stringify","user","allTask","todayTask","App","exact","path","initState","rootReducer","combineReducers","action","BASE_KEY","readBin","fetch","method","headers","then","response","json","updateBin","body","workChangeData","watchChangData","workFetchData","watchFetchData","workAuthorization","watchAuthorization","rootSaga","put","takeEvery","call","users","push","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","setTimeout","next","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b48c951.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nexport const Context = React.createContext();\n","import { CHANG_DATA, SET_DATA, INIT_DATA, AUTHORIZATION } from './types';\n\nexport const changeData = (data) => {\n    return {\n        type: CHANG_DATA,\n        payload: data\n    }\n}\n\nexport const setData = (data) => {\n    return {\n        type: SET_DATA,\n        payload: data\n    }\n}\n\nexport const initData = () => {\n    return {\n        type: INIT_DATA\n    }\n}\n\nexport const authorization = (data) => {\n    return {\n        type: AUTHORIZATION,\n        payload: data\n    }\n}\n\n// export const fetchDataUnmaunt = () => {\n//     return {\n//         type: FETCH_DATA_UNMAUNT\n//     }\n// }\n\n// export const addTaskSaga = (task) => {\n//     return {\n//         type: ADD_TASK_SAGA,\n//         payload: task\n//     }\n// }\n\n// export const initData = (data) => {\n//     return {\n//         type: INIT_DATA,\n//         payload: data\n//     }\n// }\n\n// export const getData = () => {\n//     return {\n//         type: FETCH_DATA,\n//     }\n// }\n// export const changeTask = (task) => {\n//     return {\n//         type: CHANGE_TASK,\n//         payload: task\n//     }\n// }\n// export const changeTaskDndData = (task) => {\n//     return {\n//         type: CHANGE_TASK_DnD_DATA,\n//         payload: task\n//     }\n// }\n// export const changeTaskDndTodayData = (task) => {\n//     return {\n//         type: CHANGE_TASK_DnD_TODAYDATA,\n//         payload: task\n//     }\n// }\n\n// export const deleteTask = (task) => {\n//     return {\n//         type: DELETE_TASK,\n//         payload: task\n//     }\n// }\n\n// export const deleteTaskSaga = (task) => {\n//     return {\n//         type: DELETE_TASK_SAGA,\n//         payload: task\n//     }\n// }\n","export const CHANG_DATA = 'DATA/CHANG_DATA';\nexport const SET_DATA = 'DATA/SET_DATA';\nexport const INIT_DATA = 'DATA/INIT_DATA';\n\nexport const AUTHORIZATION = 'UI/AUTHORIZATION';\n\n// export const ADD_TASK = 'DATA/ADD_TASK';\n// export const ADD_TASK_SAGA = 'DATA/ADD_TASK_SAGA';\n// export const FETCH_DATA_UNMAUNT = 'DATA/FETCH_DATA_UNMAUNT';\n// export const FETCH_DATA = 'DATA/FETCH_DATA';\n\n// export const CHANGE_TASK = 'DATA/CHANGE_TASK';\n// export const DELETE_TASK = 'DATA/DELETE_TASK';\n// export const DELETE_TASK_SAGA = 'DATA/DELETE_TASK_SAGA';\n// export const CHANGE_TASK_DnD_DATA = 'DATA/CHANGE_TASK_DnD_DATA';\n// export const CHANGE_TASK_DnD_TODAYDATA = 'DATA/CHANGE_TASK_DnD_TODAYDATA';","import ModalComponent from './ModalComponent';\nexport default ModalComponent;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { changeData } from '../../app/actions';\nimport { Modal, Button,Tooltip } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nconst ModalComponent = ({ value }) => {\n\n  const dispatch = useDispatch();\n  const {data, todayData} = useSelector( store => store.appData);\n  const [visible, setVisible] = useState(false)\n  const [valueTextarea, setValueTextarea ] = useState('')\n\n  const showModal = () => {\n    setVisible(true)\n  };\n\n  const handleOk = e => {\n    setVisible(false)\n\n    data.forEach(element => {\n      \n      if(element.id === value.id){\n        element.task = valueTextarea\n      }\n    });\n\n    todayData.forEach(element => {\n      \n      if(element.id === value.id){\n        element.task = valueTextarea\n      }\n    });\n    \n    dispatch(changeData({data,todayData}))\n  };\n\n  const handleCancel = e => {\n    setValueTextarea(value.task)\n    setVisible(false)\n  };\n\n  const handleTextarea = (e) => {\n    setValueTextarea(e.target.value)\n  }\n\n  useEffect( () => {\n    setValueTextarea(value.task)\n  },[value.task])\n  \n  return (\n    <div>\n      <Tooltip title=\"Изменить\" placement=\"topRight\">\n        <Button \n          shape=\"circle\" \n          icon={<EditOutlined/>} \n          onClick={showModal}\n        />\n      </Tooltip>\n      <Modal\n        title=\"Basic Modal\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <textarea \n          name=\"story\"\n          rows=\"5\" \n          cols=\"33\" \n          value={valueTextarea}\n          onChange={handleTextarea}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalComponent;","import React, { useContext } from 'react';\nimport { SortableElement } from 'react-sortable-hoc';\nimport moment from 'moment';\n\nimport { Context } from '../../app/context';\nimport ModalComponent from '../ModalComponent';\nimport { Button,Tooltip, Popconfirm } from 'antd';\nimport { DeleteOutlined, CheckOutlined, FileSyncOutlined } from '@ant-design/icons';\n\nconst TableTask = SortableElement(({value,type}) => { \n\n  const style = value.checked && 'table-task--done';\n  const {tableTaskControl} = useContext(Context);\n  const context = useContext(Context);\n\n  return (\n    <li className={`table-task ${style}`} title=\"кликните двара на текст\">\n      <div className=\"table-task__date\">\n        {moment(value.data).format('DD MMMM YYYY')}\n      </div>\n      <div className=\"table-task__key\">\n        {value.key}\n      </div>\n      <div className=\"table-task__text\" title=\"Кликниет два раза\">\n        {value.task}\n      </div>\n      <div className=\"control-panel\">\n        <div className=\"control-panel__elem\">\n          <ModalComponent value={value}/>\n          <Tooltip title=\"Выполнено\" placement=\"bottomLeft\">\n            <Button \n              shape=\"circle\" \n              icon={<CheckOutlined twoToneColor=\"#52c41a\"/>} \n              onClick={ () => tableTaskControl.handleChacked(value) }\n            />\n          </Tooltip>\n        </div>\n        <div className=\"control-panel__elem\">\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => tableTaskControl.handleDelete(value.id)}>\n            <Button \n              shape=\"circle\" \n              icon={<DeleteOutlined twoToneColor=\"#52c41a\"/>} \n            />\n          </Popconfirm>\n          {\n            type === 'data' || value.everyday ? (\n              <Tooltip title=\"Каждый день\" placement=\"bottomLeft\">\n                <Button \n                  shape=\"circle\" \n                  icon={<FileSyncOutlined twoToneColor=\"#eb2f96\"/>} \n                  onClick={ () => tableTaskControl.handleEveryday(value.id)}\n                />\n              </Tooltip>\n            ) : null \n          }\n        </div>\n      </div>\n    </li>\n  )\n});\n\nexport default TableTask;","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\n\nimport TableTask from './TableTask';\n\nconst TableTaskList = SortableContainer(({items,type}) => {\n\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <TableTask key={value.key} index={index} value={value} type={type} title=\"текст\"/>\n      ))}\n    </ul>\n  );\n});\n\nexport default TableTaskList;","import TableDragDrop from './TableDragDrop';\nexport default TableDragDrop;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport arrayMove from 'array-move';\nimport PropTypes from 'prop-types';\n\nimport {Context } from '../../app/context';\nimport TableTaskList from './TableTaskList';\nimport { changeData } from '../../app/actions';\n\nimport './styles.scss';\n\n\nconst TableDragDrop = ({data,type}) => {\n  const dispatch = useDispatch();\n  const [items, setItems] = useState(data);\n  const appData = useSelector( (store) => store.appData);\n\n  const onSortEnd = ({oldIndex, newIndex}) => {\n    setItems( arrayMove(items, oldIndex, newIndex) )\n\n    if(type === 'data') {\n      const newData = arrayMove(items, oldIndex, newIndex);\n      newData.forEach( (el,id) => el.key = id + 1 )\n      dispatch(changeData({ data: newData, todayData: appData.todayData }))\n    }\n\n    if(type === 'todayData') {\n      const newTodayData = arrayMove(items, oldIndex, newIndex)\n      newTodayData.forEach( (el,id) => el.key = id + 1 )\n      dispatch(changeData({ data: appData.data, todayData: newTodayData }))\n    }\n  };\n\n  const handleDelete = id => {\n\n    let { data, todayData } = appData\n    data = data.filter(item => item.id !== id ) \n    data.forEach( (el,id) => {\n      el.key = id + 1\n    })\n    \n    todayData = todayData.filter(item => item.id !== id ) \n    todayData.forEach( (el,id) => {\n      el.key = id + 1\n    })\n\n    dispatch(changeData({ data,todayData }))\n  };\n\n  const handleChacked = (value) => {\n\n    let { data, todayData } = appData\n\n    data.forEach(element => {\n      if(element.id === value.id){\n        element.checked = !element.checked\n      }\n    });\n\n    todayData.forEach(element => {\n      if(element.id === value.id){\n        element.checked = !element.checked\n      }\n    });\n    \n    dispatch(changeData({data,todayData}))\n  }\n\n  const handleEveryday = (value) => {\n    let { data, todayData } = appData\n    const newObj = {}\n\n    data.forEach(element => {\n      if(element.id === value){\n        element.everyday = !element.everyday\n      }\n    });\n\n    todayData.forEach(element => {\n      if(element.id === value){\n        element.everyday = !element.everyday\n      }\n    });\n\n    const everydayTask = data.filter(el => el.id === value);\n\n    for(let key in everydayTask[0]) {\n      console.log(key, ' = ', everydayTask[0][key])\n      newObj[key] = everydayTask[0][key]\n    }\n\n    const el = todayData.filter( el => el.id === newObj.id)\n\n\n    if(el.length) {\n      dispatch(changeData( {data,todayData}))\n    } else {\n      const newtodayData = [...todayData, newObj]\n      newtodayData.forEach( (el,id) => el.key = id + 1 )\n      \n      dispatch(changeData( {data,todayData: [...newtodayData]}))\n    }\n  }\n\n  useEffect( () => {\n    setItems(data)\n  },[data])\n  \n  const tableTaskControl = {\n    handleDelete,\n    handleChacked,\n    handleEveryday\n  }\n\n  return (\n    <Context.Provider value={{tableTaskControl}}>\n      {type === 'data' && !data.length && <Redirect to='/' />}\n      <TableTaskList items={items} onSortEnd={onSortEnd} type={type}/>\n    </Context.Provider> \n  )\n}\n\nTableDragDrop.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired, //isRequired - значит что пропс нужен для этого компонента а не просто пробросить\n  type: PropTypes.number\n}\n\nexport default TableDragDrop;","import TaskForToday from './TaskForToday';\nexport default TaskForToday;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport TableDragDrop from '../TableDragDrop';\n\nimport './styles.scss';\n\nconst TaskForToday = () => {\n  \n  const data = useSelector( (store) => store.appData.todayData);\n\n  return <TableDragDrop data={data} type=\"todayData\"/>\n}\n\nexport default TaskForToday;\n","import AllTask from './AllTask';\nexport default AllTask;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport TableDragDrop from '../TableDragDrop';\n\n// import './styles.scss';\n\nconst AllTask = () => {\n  \n  const data = useSelector( (store) => store.appData.data);\n\n  return <TableDragDrop data={data} type=\"data\"/>\n}\n\nexport default AllTask;","import Chart from './Chart';\nexport default Chart;","import React from 'react';\n\nimport './styles.scss';\n\nconst Chart = () => {\n    return (\n        <div>\n            Статистика выполнение тасок\n            при удаление сохраняеться значения выполнено или нет задание\n            и выводиться график по количеству соданых тасок и выполненых \n\n            за период месяц : создано 5 тасок\n                                выполнено 2\n                    неделя \n                    год\n        </div>\n    )\n}\n\nexport default Chart;","import FormTask from './FormTask';\nexport default FormTask;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as moment from 'moment';\n\nimport { changeData } from '../../app/actions';\nimport { Button, Input } from 'antd';\n\nconst FormTask = () => {\n\n  const dispatch = useDispatch();\n  const {data,todayData} = useSelector( state => state.appData);\n  const [ value, setValue] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const random =  Math.floor(Math.random() * 1000000);\n\n    const date = moment().valueOf()\n    const newData = {\n      key: data.length + 1,\n      id: random,\n      checked: false,\n      everyday: false,\n      date: date,\n      task: value\n    }\n    const newTodayData = {\n      key: todayData.length + 1,\n      id: random,\n      checked: false,\n      everyday: false,\n      date: date,\n      task: value\n    }\n\n    dispatch(changeData({data:[...data,newData],todayData: [...todayData,newTodayData]}))\n    setValue('');\n  }\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <Input placeholder=\"Basic usage\" onChange={handleChange} value={value}/>\n      <Button type=\"primary\" htmlType=\"submit\">Создать задачу</Button>\n    </form>\n  )\n}\n\nexport default FormTask;","import Authorization from './Authorization';\nexport default Authorization;","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { authorization } from '../../app/actions';\n\nconst Authorization = () => {\n\n\tconst dispatch = useDispatch();\n\tconst [activeForm, setActiveForm] = useState(!false);\n\tconst [login, setLogin] = useState('');\n\tconst [password, setPassword] =useState('')\n\tconst [autho, setAutho] = useState(false)\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tconst random =  Math.floor(Math.random() * 100000000);\n\n    const user = {\n\t\t\tdata: {\n\t\t\t\tallTask: [],\n\t\t\t\ttodayTask: []\n\t\t\t}\n\t\t}\n\t\t\n\t\tuser.login = login;\n\t\tuser.password = password;\n\t\tuser.id = random;\n\n\t\tdispatch(authorization({user}))\n\n\t\t// setActiveForm(false)\n\t}\n\n\tconst handleChangeLogin = ({target:{value}}) => setLogin(value)\n\n\tconst handleChangePassword = ({target:{value}}) => setPassword(value)\n\n\tconst handleOut = () => {\n\t\tlocalStorage.setItem('authorization',JSON.stringify(false))\n\t\tsetAutho(false)\n\t}\n\t\n\tuseEffect( () => { \n\t\tconst authorization = JSON.parse(localStorage.getItem('authorization'))\n\t\tsetAutho(authorization)\n\t})\n\n\tconsole.log()\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tautho ? <button onClick={handleOut}>Выйти</button> \n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\t!activeForm && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<button onClick={ () => setActiveForm(true)}>Регистрация</button>\n\t\t\t\t\t\t\t<button>Войти</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\tactiveForm && (\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tplaceholder=\"login\" \n\t\t\t\t\t\t\tvalue={login}\n\t\t\t\t\t\t\tonChange={handleChangeLogin}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\tplaceholder=\"password\" \n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={handleChangePassword}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type=\"submit\">Зарегистрировать</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Authorization;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\n\nimport TaskForToday from './components/TaskForToday';\nimport DragableBodyRow from './components/AllTask';\nimport Chart from './components/Chart';\nimport FormTask from './components/FormTask';\nimport Authorization from './components/Authorization';\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Задачи на сегодня</Link>\n            </li>\n            <li>\n              <Link to=\"/all-task\">Все задачи</Link>\n            </li>\n            <li>\n              <Link to=\"/statistics\">Статистика</Link>\n            </li>\n          </ul>\n        </nav>\n        <div>\n          <input type=\"file\"/>\n        </div>\n\n        <Authorization />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <FormTask />\n            <TaskForToday />\n          </Route>\n          <Route path=\"/all-task\">\n            {/* <FormTask /> */}\n            <DragableBodyRow />\n          </Route>\n          <Route path=\"/statistics\">\n            <Chart />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;","import { SET_DATA } from './types';\n\nconst initState = {\n\n  // data: {\n  //   allList: [],\n  //   todayList: []\n  // },        \n  data: [\n    // {\n    //   key: '1',\n    //   id: String(Math.floor(Math.random() * 1000000)),\n    //   checked: false,\n    //   date: moment().format('DD MMMM YYYY'),\n    //   task: 'New York No. 1',\n    // },\n    // {\n    //   key: '2',\n    //   id: String(Math.floor(Math.random() * 1000000)),\n    //   checked: false,\n    //   date: moment().format('DD MMMM YYYY'),\n    //   task: 'London No. 2',\n    // },\n    // {\n    //   key: '3',\n    //   id: String(Math.floor(Math.random() * 1000000)),\n    //   checked: false,\n    //   date: moment().format('DD MMMM YYYY'),\n    //   task: 'Sidney No. 3 ',\n    // },\n  ],\n  todayData: [\n    // {\n    //   key: '1',\n    //   id: String(Math.floor(Math.random() * 1000000)),\n    //   checked: false,\n    //   date: moment().format('DD MMMM YYYY'),\n    //   task: 'New York No. 1',\n    // },\n    // {\n    //   key: '2',\n    //   id: String(Math.floor(Math.random() * 1000000)),\n    //   checked: false,\n    //   date: moment().format('DD MMMM YYYY'),\n    //   task: 'London No. 2',\n    // },\n  ]\n}\n\nexport const dataReducer = (state = initState, action) => {\n  switch(action.type) {\n    case SET_DATA:\n      return {...state,...action.payload};\n    ///////////////\n    // case CHANGE_TASK_DnD_DATA:\n    //   return {...state, data: [...action.payload] };\n\n    // case CHANGE_TASK_DnD_TODAYDATA:\n    //   return {...state, todayData: [...action.payload] };\n    // case INIT_DATA:\n    //   return {...state,...action.payload};\n\n    // case ADD_TASK:\n    //   return {...state, \n    //     data: [...state.data,action.payload.data], \n    //     todayData: [...state.todayData,action.payload.todayData] \n    //   };\n    //   return { ...state, ...action.payload};\n    // case CHANGE_TASK:\n    //   return {...state, \n    //     data: [...action.payload.data],\n    //     todayData: [...action.payload.todayData] \n    //   };\n    // case DELETE_TASK:\n    //   return {...state, \n    //     data: [...action.payload.data],\n    //     todayData: [...action.payload.todayData]\n    //   };\n    // case 'FETCH_DATA':\n    //   return { ...state, data: [...state.data,action.payload] }; \n    default : \n      return state;    \n  }\n}","import { combineReducers } from 'redux';\nimport { dataReducer } from './dataReducer';\n\nexport const rootReducer = combineReducers({\n    appData: dataReducer\n})","const BASE_KEY = '$2b$10$5lgVDxg.soDXeYRaXUq8huBbb3U.F4V84S1kdZaKnf7Ri9l2OU3le';\n\n// const BASE_URL = '5f07225f5d4af74b01293f0b';\n\nconst BASE_URL = '5f141a8791806166284481cf';\n\nexport const createPost = () => {\n    return fetch(`https://api.jsonbin.io/b`,{\n        method: 'POST',\n        headers: {\n            'Content-Type':'application/json',\n            'secret-key':   BASE_KEY,\n        },\n        body : JSON.stringify( {data: [], todayData: []})\n    }\n    )\n}\n\n\nexport function readBin(){\n    return fetch(`https://api.jsonbin.io/b/${BASE_URL}`,{\n        method: 'GET',\n        headers: {\n            'secret-key':BASE_KEY,\n        },\n  \n    })\n    .then( response => response.json()) \n}\n\nexport function updateBin(body){\n    return fetch(`https://api.jsonbin.io/b/${BASE_URL}`,{\n        method: 'PUT',\n        headers: {\n            'Content-Type':'application/json',\n            'secret-key':BASE_KEY,\n            'versioning':'false',\n        },\n        body : JSON.stringify( body )\n        // body : JSON.stringify( {homework:'-1'})\n    }) \n}\n\n// eslint-disable-next-line\nfunction deleteBin(){\n    return fetch(`https://api.jsonbin.io/b/5d978992de1e6569c2490df1/latest`,{\n        method: 'DELETE',\n        headers: {\n            'secret-key':BASE_KEY,\n        },\n        \n    })\n    .then( response => response.json()) \n    .then( res => console.log( res))\n\n}\nfunction save(obj,id){\n    readBin(id)\n    .then(res => {\n        res.users.forEach((el,i) => {\n            if(el.phone===obj.phone){\n                res.users[i] = obj\n            }\n        });\n        updateBin(id,res)\n    })\n}\n\n\n","import { all, takeEvery, call, put, select} from 'redux-saga/effects';\nimport { CHANG_DATA, INIT_DATA, AUTHORIZATION} from './types';\nimport { setData } from './actions'\nimport { readBin, updateBin } from './api';\nimport * as moment from 'moment'\n\nfunction* workChangeData({payload}) {\n    yield put(setData(payload))\n    updateBin(payload)\n}\n\nfunction* watchChangData() {\n    yield takeEvery(CHANG_DATA, workChangeData)\n}\n\nfunction* workFetchData() {\n    const response = yield call(readBin)\n    console.log(response,'response')\n    // response.todayData = response.todayData\n    //     .filter( el => !el.everyday ? moment(el.date).format('DD MMM YYYY') === moment().format('DD MMM YYYY') : el ) \n    // response.todayData.forEach( (el,id) => el.key = id + 1 )\n\n    // yield put(setData(response))\n}\n\nfunction* watchFetchData() {\n    yield takeEvery(INIT_DATA,workFetchData)\n}\n\nfunction* workAuthorization({payload}) {\n    console.log('AUTHORIZATION')\n\n    const response = yield call(readBin)\n\n    const user = response.users.filter( user => {\n        return user.login === payload.user.login\n    })\n\n    console.log(user,'user')\n\n    if(!user.length) {\n        response.users.push(payload.user)\n        localStorage.setItem('login',JSON.stringify(payload.user.login))\n        localStorage.setItem('authorization',JSON.stringify(true))\n        updateBin(response)\n        yield put(setData(payload.user.data))\n\n\n    } else {\n        console.log('выдать ошибка что пользователь есть')\n    }\n\n}\n\nfunction* watchAuthorization() {\n    yield takeEvery(AUTHORIZATION,workAuthorization)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        watchFetchData(),\n        watchChangData(),\n        watchAuthorization()\n    ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n// import logger from 'redux-logger';\n\nimport { rootReducer } from './rootReducer';\nimport { initMiddleware } from './initMiddleware';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore( \n    rootReducer, \n    applyMiddleware(\n        sagaMiddleware,\n        initMiddleware\n    ) \n);\n\nsagaMiddleware.run(rootSaga);","\nimport { initData, authorization } from './actions';\n\nexport const initMiddleware = ({dispatch}) => {\n\n    // setTimeout( () => dispatch(authorization()) ,0);\n    setTimeout( () => dispatch(initData()) ,0);\n\n    return (next) => (action) => next(action)   \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'moment/locale/ru'  // without this line it didn't work\n\nimport App from './App';\nimport { store } from './app/store';\n\nimport 'antd/dist/antd.css'\nimport './styles/index.scss';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}